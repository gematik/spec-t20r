# envoy.yaml
admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address:
      protocol: TCP
      address: 0.0.0.0
      port_value: 9901

static_resources:
  listeners:
    - name: listener_0
      address:
        socket_address:
          protocol: TCP
          address: 0.0.0.0
          port_value: 8081 # Envoy proxy listening port
      filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: ingress_http
              access_log:
                - name: envoy.access_loggers.stdout
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                    format: "[%START_TIME%] \"%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%\" %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% [%UPSTREAM_CLUSTER%] [%UPSTREAM_HOST%] [%REQ(X-REQUEST-ID)%] trace_id=%TRACE_ID% span_id=%SPAN_ID% parent_span_id=%PARENT_SPAN_ID%\n"
              http_filters:
                - name: envoy.filters.http.opentelemetry_http
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.opentelemetry.v3.OpenTelemetryConfig
                    service_name: envoy-proxy-vsdm2
                    emit_attributes_as_spans: true
                    status_on_error:
                      code: 500
                    grpc_service:
                      envoy_grpc:
                        cluster_name: otel_collector_cluster
                        initial_metadata: []
                - name: envoy.filters.http.router
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
              route_config:
                name: local_route
                virtual_hosts:
                  - name: local_service
                    domains: ["*"]
                    routes:
                      - match:
                          prefix: "/" # Route all requests
                        route:
                          cluster: rs_vsdm2_cluster
                          timeout: 10s # Example timeout

  clusters:
    - name: rs_vsdm2_cluster
      connect_timeout: 0.25s
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: rs_vsdm2_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: rs-vsdm2-service # Kubernetes service name of rs_vsdm2 server
                      port_value: 8080 # Port of rs_vsdm2 server

    - name: otel_collector_cluster
      connect_timeout: 0.25s
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      http2_protocol_options: {} # Required for gRPC
      load_assignment:
        cluster_name: otel_collector_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: otel-collector-service # Kubernetes service name of otel-collector
                      port_value: 4317 # OTLP gRPC port

tracing:
  http:
    name: envoy.tracers.opentelemetry
    typed_config:
      "@type": type.googleapis.com/envoy.config.trace.v3.OpenTelemetryConfig
      service_name: envoy-proxy-vsdm2-global # Global tracer service name
      grpc_service:
        envoy_grpc:
          cluster_name: otel_collector_cluster
          initial_metadata: []
      context_export_sampled: true # Export even sampled traces
      context_export_unsampled: false # Don't export unsampled traces (adjust as needed)
      resource_attributes:
        - key: deployment.environment
          value:
            string_value: "kubernetes" # Example environment attribute