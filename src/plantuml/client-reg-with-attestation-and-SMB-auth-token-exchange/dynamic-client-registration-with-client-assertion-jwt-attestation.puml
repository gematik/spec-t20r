@startuml "dynamic-client-registration-with-client-assertion-jwt-attestation"
autonumber "(00)"
skinparam defaultFontSize 10
skinparam defaultFontName Helvetica
skinparam DefaultMonospacedFontName Courier
skinparam lengthAdjust none
skinparam sequenceReferenceBackgroundColor White
skinparam SequenceReferenceFontSize 12
/'skinparam SequenceReferenceFontStyle bold
'/


!pragma teoz true

Actor User
box "LEI" #GhostWhite
  box "PrimÃ¤rsystem" #Lavender
    box "ZETA Client" #SandyBrown
      participant Client as "ZETA\nClient"
    end box
    participant TPM as "TPM"
  end box
  participant Konnektor as "Konnektor or\nTI-Gateway"
  participant SMB as "SM(C)-B"
end box

box "Anbieter" #TECHNOLOGY
  box "ZETA Guard" #SandyBrown
    participant HP as "PEP\nhttp Proxy"
    participant AuthS as "PDP\nAuthorization Server" 
    participant PE as "PDP\nPolicy Engine"
  end box
    box TI 2.0 Dienst #DarkSeaGreen
      participant RS as "Resource\nServer"
    end box
end box

alt Client has no client_id

activate Client
alt Client has no valid Attestation
    alt Client has no Client Attestation Key Pair
      alt Client uses TPM
        Client -> User: Obtain Admin\naccess to TPM
        User --> Client: TPM Admin access
        Client -> TPM: Create Client Attestation Key Pair in TPM
        activate TPM
        TPM --> Client: Public Attestation Key
        deactivate TPM
      else Client uses self signed Attestation Key (deprecated)
        Client -> Client: Create self signed Client Attestation Key Pair
      end
    end
    alt Client has no Client Instance Key Pair
      Client -> Client: Create Client Instance Key Pair
    end
end

  group Client Assertion JWT
    Client -> Client: **Generate Client Assertion JWT**\n("typ": "oauth-client-attestation+jwt", "alg": "ES256"\n"sub": "client_id", "cnf" with public Client Instance Key)
    alt Client uses TPM
      Client -> TPM: Get TPM evidence
      TPM --> Client: TPM2B_ATTEST Objekt and TPM EK certificate chain
      Client -> Client: Add TPM evidence to Client Attestation JWT
      Client -> TPM: Sign Client Attestation JWT with Client Attestation Key
      activate TPM
      TPM --> Client: Client Attestation JWT Signature
      deactivate TPM
    else Client uses self signed Attestation Key (deprecated)
      Client -> Client: Sign Client Attestation JWT with Client Key
    end
  end


  Client -> AuthS: POST /register (RFC7591)
  activate AuthS
  AuthS --> Client: Client Information Response with client_id (RFC7591)
  deactivate AuthS


  deactivate Client
end

@enduml