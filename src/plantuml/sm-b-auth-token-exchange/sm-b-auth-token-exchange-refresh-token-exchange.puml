@startuml "SM-B-Auth-token-exchange"
autonumber "(00)"
skinparam defaultFontSize 10
skinparam defaultFontName Helvetica
skinparam DefaultMonospacedFontName Courier
skinparam lengthAdjust none
skinparam sequenceReferenceBackgroundColor White
skinparam SequenceReferenceFontSize 12
/'skinparam SequenceReferenceFontStyle bold
'/


!pragma teoz true

Actor User
box "LEI" #GhostWhite
  box "PrimÃ¤rsystem" #Lavender
    box "ZETA Client" #SandyBrown
      participant Client as "ZETA\nClient"
    end box
    participant TPM as "TPM"
  end box
  participant Konnektor as "Konnektor or\nTI-Gateway"
  participant SMB as "SM(C)-B"
end box

box "Anbieter" #TECHNOLOGY
  box "ZETA Guard" #SandyBrown
    participant HP as "PEP\nhttp Proxy"
    participant AuthS as "PDP\nAuthorization Server" 
    participant PE as "PDP\nPolicy Engine"
  end box
    box TI 2.0 Dienst #DarkSeaGreen
      participant RS as "Resource\nServer"
    end box
end box

alt Client has valid Refresh token
activate Client
Client -> Client: create DPoP JWT without nonce
Client -> AuthS: POST /token\n\
  DPoP: <DPoP JWT>\n\
  grant_type=refresh_token\n\
  refresh_token= ... (Refresh token)
activate AuthS
AuthS -> AuthS: verify Refresh token and DPoP JWT
AuthS -> AuthS: invalidate Refresh token
end

AuthS -> PE: POST /v1/data/authz, body {  "input": {...}} 
activate PE
PE --> AuthS: 200 OK, body {"allow": true,\n\
"access_token_ttl": "360",\n\
"refresh_token_ttl": "43200",\n\
"scope": "RS specific scopes"}
deactivate PE
AuthS -> AuthS: issue Access and Refresh token\nwith DPoP Binding
AuthS --> Client: 200 OK, Access token, Refresh token, bound to DPoP
deactivate AuthS

@enduml