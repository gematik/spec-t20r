@startuml "SM-B-Auth-token-exchange"
autonumber "(00)"
skinparam defaultFontSize 10
skinparam defaultFontName Helvetica
skinparam DefaultMonospacedFontName Courier
skinparam lengthAdjust none
skinparam sequenceReferenceBackgroundColor White
skinparam SequenceReferenceFontSize 12
/'skinparam SequenceReferenceFontStyle bold
'/


!pragma teoz true

Actor User
box "LEI" #GhostWhite
  box "PrimÃ¤rsystem" #Lavender
    box "ZETA Client" #SandyBrown
      participant Client as "ZETA\nClient"
    end box
    participant TPM as "TPM"
  end box
  participant Konnektor as "Konnektor or\nTI-Gateway"
  participant SMB as "SM(C)-B"
end box

box "Anbieter" #TECHNOLOGY
  box "ZETA Guard" #SandyBrown
    participant HP as "PEP\nhttp Proxy"
    participant AuthS as "PDP\nAuthorization Server" 
    participant PE as "PDP\nPolicy Engine"
  end box
    box TI 2.0 Dienst #DarkSeaGreen
      participant RS as "Resource\nServer"
    end box
end box

activate Client
  group SM(C)-B Access Token JWT

    Client -> Client: generate DPoP key pair

    Client -> Client: **Generate SM(C)-B Access Token JWT**\n("typ": "JWT", "alg": "ES256"\n"sub": "telematik_id",\n"scope": "RS specific scopes" "cnf": with public Client Attestation Key)
    Client -> Konnektor: externalAuthenticate SM(C)-B Access Token JWT-hash
    activate Konnektor
    Konnektor -> SMB: sign JWT-hash
    activate SMB
    SMB -> Konnektor: JWT-Signature
    deactivate SMB
    Konnektor -> Client: JWT-Signature
    deactivate Konnektor
    Client -> Client: Add JWT-Signature to SM(C)-B Access Token
  end

  group Client Attestation JWT
    Client -> Client: **Generate Client Attestation JWT**\n("typ": "oauth-client-attestation+jwt", "alg": "ES256"\n"sub": "client_id", "cnf" with public Client Instance Key)
    alt Client uses TPM
      Client -> TPM: Get TPM evidence
      TPM --> Client: TPM2B_ATTEST Objekt and TPM EK certificate chain
      Client -> Client: Add TPM evidence to Client Attestation JWT
      Client -> TPM: Sign Client Attestation JWT with Client Attestation Key
      activate TPM
      TPM --> Client: Client Attestation JWT Signature
      deactivate TPM
    else Client uses self signed Attestation Key (deprecated)
      Client -> Client: Sign Client Attestation JWT with Client Key
    end
  end

  group Client Attestation PoP and DPoP JWT
    Client -> AuthS: **GET /nonce**
    activate AuthS
    AuthS --> Client: return 200 OK new-nonce: nonce
    Client -> Client: **Generate Client Attestation PoP JWT**\n("typ": "oauth-client-attestation-pop+jwt", "nonce"\nsign with the private Client Instance Key)
    Client -> Client: **Generate DPoP JWT**\n("nonce", sign with the private DPoP Key)
  end
deactivate Client

@enduml