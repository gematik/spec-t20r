name: Automatic Image Generation

on:
  push:
    paths:
      - 'src/plantuml/**'
      - 'src/drawio/**'
  workflow_dispatch:

jobs:
  generate_images:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y graphviz xdotool xvfb
        sudo snap install drawio --classic

    - name: Download PlantUML jar
      run: |
        wget https://github.com/plantuml/plantuml/releases/latest/download/plantuml.jar -O /usr/local/bin/plantuml.jar

        - name: Check for changed or missing image files
        id: check_files
        run: |
          CHANGED_FILES=""
          MISSING_FILES=""
  
          # Get base commit
          BASE_SHA=$(git rev-parse HEAD^1)
  
          # Check for changed files
          CHANGED_FILES_TEMP=$(git diff --name-only $BASE_SHA HEAD | grep -E 'src/plantuml/.*\.puml|src/drawio/.*\.drawio' || true)
          CHANGED_FILES="$CHANGED_FILES_TEMP"
  
          # Check for missing image files
          while IFS= read -r -d '' file; do
            image_dir=$(dirname "$file" | sed 's|^src/plantuml|images|')
            image_base=$(basename "$file" .puml)
            if [ ! -f "$image_dir/$image_base.png" ] || [ ! -f "$image_dir/$image_base.svg" ]; then
              MISSING_FILES="$MISSING_FILES $file"
            fi
          done < <(find src/plantuml -name "*.puml" -print0)
  
          while IFS= read -r -d '' file; do
            image_dir=$(dirname "$file" | sed 's|^src/drawio|images|')
            image_base=$(basename "$file" .drawio)
            if [ ! -f "$image_dir/$image_base.png" ] || [ ! -f "$image_dir/$image_base.svg" ]; then
              MISSING_FILES="$MISSING_FILES $file"
            fi
          done < <(find src/drawio -name "*.drawio" -print0)
  
          # Combine changed and missing files
          ALL_FILES="$CHANGED_FILES $MISSING_FILES"
          echo "CHANGED_FILES=$ALL_FILES" >> $GITHUB_ENV
  
          echo "CHANGED_FILES: $CHANGED_FILES"
          echo "MISSING_FILES: $MISSING_FILES"
      shell: bash
  
    - name: Debug changed files
      run: |
        echo "Debug: Changed files are ${{ env.CHANGED_FILES }}"

    - name: Generate images from PlantUML files
      if: ${{ env.CHANGED_FILES }} != ''
      run: |
        for file in $(echo "${{ env.CHANGED_FILES }}" | grep 'src/plantuml/.*\.puml' || true); do
          echo "Processing PlantUML file: $file"
          output_dir=$(dirname "$file" | sed 's|^src/plantuml|images|')
          mkdir -p "$output_dir"
          java -jar /usr/local/bin/plantuml.jar -tpng "$file" -o "${PWD}/$output_dir"
          java -jar /usr/local/bin/plantuml.jar -tsvg "$file" -o "${PWD}/$output_dir"
        done

    - name: Generate images from drawio files
      if: ${{ env.CHANGED_FILES }} != ''
      run: |
        for file in $(echo "${{ env.CHANGED_FILES }}" | grep 'src/drawio/.*\.drawio' || true); do
          echo "Processing drawio file: $file"
          output_dir=$(dirname "$file" | sed 's|^src/drawio|images|')
          mkdir -p "$output_dir"
          xvfb-run -a drawio -x -f png -o "${PWD}/$output_dir/$(basename "$file" .drawio).png" "$file"
          xvfb-run -a drawio -x -f svg -o "${PWD}/$output_dir/$(basename "$file" .drawio).svg" "$file"
        done

    - name: Debug images folder
      run: |
        echo "Contents of the images folder:"
        ls -R images

    - name: Commit and push generated images
      if: ${{ env.CHANGED_FILES }} != '' && test -n "$(git status --porcelain)"
      run: |
        git config --global user.name 'github-actions'
        git config --global user.email 'github-actions@github.com'
        git add -A images
        git commit -m "Generate images from changed or missing PlantUML and drawio files"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
