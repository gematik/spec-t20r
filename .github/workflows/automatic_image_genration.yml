name: Automatic Image Generation

on:
  push:
    paths:
      - 'src/plantuml/**'
      - 'src/drawio/**'
      - '.github/workflows/generate_images.yml'
  workflow_dispatch:

jobs:
  generate_images:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends graphviz xvfb
        # Install drawio via snap
        sudo snap install drawio
        # Wait a moment for snap changes to propagate if needed
        sleep 5

    - name: Download PlantUML jar
      run: |
        wget https://github.com/plantuml/plantuml/releases/latest/download/plantuml.jar -O /tmp/plantuml.jar

    - name: Check for changed or missing image files
      id: check_files
      run: |
        CHANGED_FILES=""
        MISSING_FILES=""

        # Check for changed files
        BASE_SHA=$(git rev-parse HEAD^1)
        CHANGED_FILES_TEMP=$(git diff --name-only $BASE_SHA HEAD | grep -E 'src/plantuml/.*\.puml|src/drawio/.*\.drawio' || true)
        if [ -n "$CHANGED_FILES_TEMP" ]; then
          CHANGED_FILES="$CHANGED_FILES_TEMP"
        fi

        # Check for missing image files
        find src/plantuml -name "*.puml" -print0 | while IFS= read -r -d $'\0' file; do
          image_dir=$(dirname "$file" | sed 's|^src/plantuml|images|')
          image_base=$(basename "$file" .puml)
          if [ ! -f "$image_dir/$image_base.png" ] || [ ! -f "$image_dir/$image_base.svg" ]; then
            MISSING_FILES="$MISSING_FILES $file"
          fi
        done

        find src/drawio -name "*.drawio" -print0 | while IFS= read -r -d $'\0' file; do
          image_dir=$(dirname "$file" | sed 's|^src/drawio|images|')
          image_base=$(basename "$file" .drawio)
          if [ ! -f "$image_dir/$image_base.png" ] || [ ! -f "$image_dir/$image_base.svg" ]; then
            MISSING_FILES="$MISSING_FILES $file"
          fi
        done

        # Combine changed and missing files
        if [ -n "$CHANGED_FILES" ] || [ -n "$MISSING_FILES" ]; then
          echo "CHANGED_FILES=$CHANGED_FILES $MISSING_FILES" >> $GITHUB_ENV
        fi
        echo "CHANGED_FILES: $CHANGED_FILES"
        echo "MISSING_FILES: $MISSING_FILES"
      shell: bash

    - name: Debug changed files
      run: |
        echo "Debug: Changed files are ${{ env.CHANGED_FILES }}"

    - name: Generate images from PlantUML files
      if: ${{ env.CHANGED_FILES }} != ''
      run: |
        for file in $(echo "${{ env.CHANGED_FILES }}" | grep 'src/plantuml/.*\.puml' || true); do
          echo "Processing PlantUML file: $file"
          output_dir=$(dirname "$file" | sed 's|^src/plantuml|images|')
          image_base=$(basename "$file" .puml)
          png_path="$output_dir/$image_base.png"
          svg_path="$output_dir/$image_base.svg"

    - name: Generate images from drawio files
      if: ${{ env.CHANGED_FILES }} != ''
      run: |
        for file in $(echo "${{ env.CHANGED_FILES }}" | grep 'src/drawio/.*\.drawio' || true); do
          echo "Processing drawio file: $file"
          output_dir=$(dirname "$file" | sed 's|^src/drawio|images|')
          image_base=$(basename "$file" .drawio)
          png_path="$output_dir/$image_base.png"
          svg_path="$output_dir/$image_base.svg"

          # Regenerate if PNG or SVG is missing, OR if the source file is newer than PNG or SVG
          if [ ! -f "$png_path" ] || [ ! -f "$svg_path" ] || { [ -f "$png_path" ] && [ "$file" -nt "$png_path" ]; } || { [ -f "$svg_path" ] && [ "$file" -nt "$svg_path" ]; }; then
            echo "-> Generating images for $file"
            mkdir -p "$output_dir"
            # Add --no-sandbox and try disabling gpu explicitly for drawio CLI in xvfb
            xvfb-run --auto-servernum drawio --no-sandbox --disable-gpu --export --format png --output "$png_path" "$file"
            xvfb-run --auto-servernum drawio --no-sandbox --disable-gpu --export --format svg --output "$svg_path" "$file"
             # Verify files were created (for debugging)
            if [ -f "$png_path" ] && [ -f "$svg_path" ]; then
               echo "   Successfully generated: $png_path and $svg_path"
               GENERATED_COUNT=$((GENERATED_COUNT + 1))
            else
               echo "   ERROR: Failed to generate images for $file" >&2
               # Consider failing the step: exit 1
            fi
          else
            echo "-> Images for $file are up-to-date."
          fi
        done < <(find src/drawio -name "*.drawio" -print0) # Use process substitution

        echo "Generated/Updated $GENERATED_COUNT drawio image sets."
        # Set output flag if any images were generated
        if [ "$GENERATED_COUNT" -gt 0 ]; then
          echo "drawio_generated=true" >> $GITHUB_OUTPUT
        else
          echo "drawio_generated=false" >> $GITHUB_OUTPUT
        fi
      shell: bash # Explicitly use bash for process substitution

    - name: Show Git Status for Images
      # Run always to see the state before commit attempt
      run: |
        echo "--- Git Status for images directory ---"
        git status --porcelain images || echo "No changes or untracked files in images directory."
        echo "--- Listing images directory ---"
        ls -R images || echo "Images folder does not exist or is empty."

    - name: Commit and push generated images
      if: ${{ env.CHANGED_FILES }} != '' && test -n "$(git status --porcelain)"
      run: |
        git config --global user.name 'github-actions'
        git config --global user.email 'github-actions@github.com'
        git add -A images
        git commit -m "Generate images from changed or missing PlantUML and drawio files"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
